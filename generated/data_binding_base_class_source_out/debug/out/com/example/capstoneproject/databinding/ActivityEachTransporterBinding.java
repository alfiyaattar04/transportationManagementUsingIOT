// Generated by view binder compiler. Do not edit!
package com.example.capstoneproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.capstoneproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEachTransporterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ActivityStatusEachTransporterPage;

  @NonNull
  public final TextView EmailEachTransporterPage;

  @NonNull
  public final TextView LocationEachTransporterPage;

  @NonNull
  public final LinearLayout LocationProfilePage;

  @NonNull
  public final TextView MobNoEachTransporterPage;

  @NonNull
  public final TextView NameEachTransporterPage;

  @NonNull
  public final LinearLayout emailLinearLayout;

  @NonNull
  public final ImageView imageProfilePage;

  @NonNull
  public final LinearLayout l1;

  @NonNull
  public final LinearLayout mobNoLinearLayout;

  @NonNull
  public final ImageButton profilePageWhatsAppRedirect;

  private ActivityEachTransporterBinding(@NonNull LinearLayout rootView,
      @NonNull TextView ActivityStatusEachTransporterPage,
      @NonNull TextView EmailEachTransporterPage, @NonNull TextView LocationEachTransporterPage,
      @NonNull LinearLayout LocationProfilePage, @NonNull TextView MobNoEachTransporterPage,
      @NonNull TextView NameEachTransporterPage, @NonNull LinearLayout emailLinearLayout,
      @NonNull ImageView imageProfilePage, @NonNull LinearLayout l1,
      @NonNull LinearLayout mobNoLinearLayout, @NonNull ImageButton profilePageWhatsAppRedirect) {
    this.rootView = rootView;
    this.ActivityStatusEachTransporterPage = ActivityStatusEachTransporterPage;
    this.EmailEachTransporterPage = EmailEachTransporterPage;
    this.LocationEachTransporterPage = LocationEachTransporterPage;
    this.LocationProfilePage = LocationProfilePage;
    this.MobNoEachTransporterPage = MobNoEachTransporterPage;
    this.NameEachTransporterPage = NameEachTransporterPage;
    this.emailLinearLayout = emailLinearLayout;
    this.imageProfilePage = imageProfilePage;
    this.l1 = l1;
    this.mobNoLinearLayout = mobNoLinearLayout;
    this.profilePageWhatsAppRedirect = profilePageWhatsAppRedirect;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEachTransporterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEachTransporterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_each_transporter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEachTransporterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ActivityStatusEachTransporterPage;
      TextView ActivityStatusEachTransporterPage = ViewBindings.findChildViewById(rootView, id);
      if (ActivityStatusEachTransporterPage == null) {
        break missingId;
      }

      id = R.id.EmailEachTransporterPage;
      TextView EmailEachTransporterPage = ViewBindings.findChildViewById(rootView, id);
      if (EmailEachTransporterPage == null) {
        break missingId;
      }

      id = R.id.LocationEachTransporterPage;
      TextView LocationEachTransporterPage = ViewBindings.findChildViewById(rootView, id);
      if (LocationEachTransporterPage == null) {
        break missingId;
      }

      id = R.id.LocationProfilePage;
      LinearLayout LocationProfilePage = ViewBindings.findChildViewById(rootView, id);
      if (LocationProfilePage == null) {
        break missingId;
      }

      id = R.id.MobNoEachTransporterPage;
      TextView MobNoEachTransporterPage = ViewBindings.findChildViewById(rootView, id);
      if (MobNoEachTransporterPage == null) {
        break missingId;
      }

      id = R.id.NameEachTransporterPage;
      TextView NameEachTransporterPage = ViewBindings.findChildViewById(rootView, id);
      if (NameEachTransporterPage == null) {
        break missingId;
      }

      id = R.id.emailLinearLayout;
      LinearLayout emailLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLinearLayout == null) {
        break missingId;
      }

      id = R.id.imageProfilePage;
      ImageView imageProfilePage = ViewBindings.findChildViewById(rootView, id);
      if (imageProfilePage == null) {
        break missingId;
      }

      id = R.id.l1;
      LinearLayout l1 = ViewBindings.findChildViewById(rootView, id);
      if (l1 == null) {
        break missingId;
      }

      id = R.id.mobNoLinearLayout;
      LinearLayout mobNoLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (mobNoLinearLayout == null) {
        break missingId;
      }

      id = R.id.profilePageWhatsAppRedirect;
      ImageButton profilePageWhatsAppRedirect = ViewBindings.findChildViewById(rootView, id);
      if (profilePageWhatsAppRedirect == null) {
        break missingId;
      }

      return new ActivityEachTransporterBinding((LinearLayout) rootView,
          ActivityStatusEachTransporterPage, EmailEachTransporterPage, LocationEachTransporterPage,
          LocationProfilePage, MobNoEachTransporterPage, NameEachTransporterPage, emailLinearLayout,
          imageProfilePage, l1, mobNoLinearLayout, profilePageWhatsAppRedirect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
