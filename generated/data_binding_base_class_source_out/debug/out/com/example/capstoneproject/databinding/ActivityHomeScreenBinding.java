// Generated by view binder compiler. Do not edit!
package com.example.capstoneproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.capstoneproject.R;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeScreenBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final ImageView menuredirect;

  @NonNull
  public final NavigationView navigationView;

  @NonNull
  public final ImageView profilepageredirect;

  @NonNull
  public final RelativeLayout relativeAddLorry;

  @NonNull
  public final RelativeLayout relativeAllLorry;

  @NonNull
  public final RelativeLayout relativeLocation;

  @NonNull
  public final RelativeLayout relativeTransporters;

  private ActivityHomeScreenBinding(@NonNull DrawerLayout rootView,
      @NonNull DrawerLayout drawerLayout, @NonNull ImageView menuredirect,
      @NonNull NavigationView navigationView, @NonNull ImageView profilepageredirect,
      @NonNull RelativeLayout relativeAddLorry, @NonNull RelativeLayout relativeAllLorry,
      @NonNull RelativeLayout relativeLocation, @NonNull RelativeLayout relativeTransporters) {
    this.rootView = rootView;
    this.drawerLayout = drawerLayout;
    this.menuredirect = menuredirect;
    this.navigationView = navigationView;
    this.profilepageredirect = profilepageredirect;
    this.relativeAddLorry = relativeAddLorry;
    this.relativeAllLorry = relativeAllLorry;
    this.relativeLocation = relativeLocation;
    this.relativeTransporters = relativeTransporters;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.menuredirect;
      ImageView menuredirect = ViewBindings.findChildViewById(rootView, id);
      if (menuredirect == null) {
        break missingId;
      }

      id = R.id.navigation_view;
      NavigationView navigationView = ViewBindings.findChildViewById(rootView, id);
      if (navigationView == null) {
        break missingId;
      }

      id = R.id.profilepageredirect;
      ImageView profilepageredirect = ViewBindings.findChildViewById(rootView, id);
      if (profilepageredirect == null) {
        break missingId;
      }

      id = R.id.relativeAddLorry;
      RelativeLayout relativeAddLorry = ViewBindings.findChildViewById(rootView, id);
      if (relativeAddLorry == null) {
        break missingId;
      }

      id = R.id.relativeAllLorry;
      RelativeLayout relativeAllLorry = ViewBindings.findChildViewById(rootView, id);
      if (relativeAllLorry == null) {
        break missingId;
      }

      id = R.id.relativeLocation;
      RelativeLayout relativeLocation = ViewBindings.findChildViewById(rootView, id);
      if (relativeLocation == null) {
        break missingId;
      }

      id = R.id.relativeTransporters;
      RelativeLayout relativeTransporters = ViewBindings.findChildViewById(rootView, id);
      if (relativeTransporters == null) {
        break missingId;
      }

      return new ActivityHomeScreenBinding((DrawerLayout) rootView, drawerLayout, menuredirect,
          navigationView, profilepageredirect, relativeAddLorry, relativeAllLorry, relativeLocation,
          relativeTransporters);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
