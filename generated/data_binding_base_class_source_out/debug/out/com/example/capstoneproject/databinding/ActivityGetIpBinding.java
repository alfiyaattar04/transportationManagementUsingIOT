// Generated by view binder compiler. Do not edit!
package com.example.capstoneproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.capstoneproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGetIpBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText getIpFromUser;

  @NonNull
  public final AppCompatButton getIpFromUserButton;

  @NonNull
  public final ImageView logoImage;

  @NonNull
  public final TextView logoName;

  private ActivityGetIpBinding(@NonNull LinearLayout rootView, @NonNull EditText getIpFromUser,
      @NonNull AppCompatButton getIpFromUserButton, @NonNull ImageView logoImage,
      @NonNull TextView logoName) {
    this.rootView = rootView;
    this.getIpFromUser = getIpFromUser;
    this.getIpFromUserButton = getIpFromUserButton;
    this.logoImage = logoImage;
    this.logoName = logoName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGetIpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGetIpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_get_ip, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGetIpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.getIpFromUser;
      EditText getIpFromUser = ViewBindings.findChildViewById(rootView, id);
      if (getIpFromUser == null) {
        break missingId;
      }

      id = R.id.getIpFromUserButton;
      AppCompatButton getIpFromUserButton = ViewBindings.findChildViewById(rootView, id);
      if (getIpFromUserButton == null) {
        break missingId;
      }

      id = R.id.logo_image;
      ImageView logoImage = ViewBindings.findChildViewById(rootView, id);
      if (logoImage == null) {
        break missingId;
      }

      id = R.id.logo_name;
      TextView logoName = ViewBindings.findChildViewById(rootView, id);
      if (logoName == null) {
        break missingId;
      }

      return new ActivityGetIpBinding((LinearLayout) rootView, getIpFromUser, getIpFromUserButton,
          logoImage, logoName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
